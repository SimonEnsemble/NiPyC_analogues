
# --------------------------------- Initialization -------------------------------------- #
units           real
atom_style      full
boundary        p p p

pair_style      lj/cut 14.000
bond_style      harmonic
angle_style     cosine/periodic
dihedral_style  harmonic
improper_style  fourier

special_bonds   lj/coul 0.0 0.0 1.0
pair_modify     tail no mix arithmetic
#dielectric      1.0
box tilt        large
read_data       data.NiPyC2_experiment_with_Kr
  triclinic box = (0 0 0) to (31.264 37.5702 30.8228) with tilt (0 -0.682783 0)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  2431 atoms
  scanning bonds ...
  6 = max bonds/atom
  scanning angles ...
  15 = max angles/atom
  scanning dihedrals ...
  8 = max dihedrals/atom
  scanning impropers ...
  3 = max impropers/atom
  reading bonds ...
  2880 bonds
  reading angles ...
  5490 angles
  reading dihedrals ...
  5760 dihedrals
  reading impropers ...
  3780 impropers
  6 = max # of 1-2 neighbors
  9 = max # of 1-3 neighbors
  12 = max # of special neighbors
  special bonds CPU = 0.000727294 secs
  read_data CPU = 0.0388869 secs

#### Atom Groupings ####
group           kr       id   55
1 atoms in group kr
group           fram     id   1:54 56:2431
2430 atoms in group fram
#### END Atom Groupings ####

###
# Speed up Calculations by exluding framework-framework interactions
#   since we are keeping the framework rigid and stationary
#
# neigh_modify keyword values ...
# keyword = exclude
# values  = group group1-ID group2-ID
#
# group1-ID, group2-ID = exclude if one atom is in 1st group, other in 2nd
###
neigh_modify exclude group fram fram

# ----------------------------- Variables ---------------------- #
dump            NiPyC2_experiment_with_Kr_xyzmov all xyz 5000 NiPyC2_experiment_with_Kr_mov.xyz
dump_modify     NiPyC2_experiment_with_Kr_xyzmov element Ni O N C H Kr
variable        dt         equal 1.00
variable        tdamp      equal 100*${dt}
variable        tdamp      equal 100*1
variable        eqtemp     equal 298.00

# ------------------------------ Equilibriation -------------------------------------------- #
# we do not need to perform equilibriation since we are using a rigid framework
# and the (single) adsorbate has already been inserted into the material via GCMC
# which already included an equilibriation phase.


# --------------------- Production (data gathering) --------------------------------------- #
# A simple way to hold atoms stationary is to not include those atoms in your time integration.
#reset_timestep  0

fix             3 kr nvt temp ${eqtemp} ${eqtemp} ${tdamp}
fix             3 kr nvt temp 298 ${eqtemp} ${tdamp}
fix             3 kr nvt temp 298 298 ${tdamp}
fix             3 kr nvt temp 298 298 100

###
#  mean-squared disp of grp 1
#
# A vector of four quantities is calculated by this compute:
# The first 3 elements of the vector are the squared dx,dy,dz displacements, summed and averaged over atoms in the group.
# The fourth element is the total squared displacement, i.e. (dx*dx + dy*dy + dz*dz),
#  summed and averaged over atoms in the group.
#
# The slope of the MSD versus time is proportional to the diffusion coefficient.
# MSD values can be accumulated in a vector via the fix vector command,
#   and a line fit to the vector to compute its slope via the variable slope function,
#   and thus extract D.
#
# fix ID group-ID vector Nevery value1 value2 ...
#
# c_ID[I] = Ith component of global vector calculated by a compute with ID
# f_ID = global scalar calculated by a fix with ID
# v_name = value calculated by an equal-style variable with name
#
# variable name style args...
#
# The slope() function uses linear regression to fit a line to the set of points,
#   equally spaced by 1 in their x coordinate: (1,V1), (2,V2), â€¦, (N,VN),
#   where the Vi are the values in the global vector of length N.
#   The returned value is the slope of the line.
#   If the line has a single point or is vertical, it returns 1.0e20.
###
compute         msd all msd com yes
fix             5 kr vector 5 c_msd[4]
variable        fitslope equal slope(f_5)/6/(5*dt) # why dividing slope?

thermo_style    custom step v_eqtemp c_msd[4] v_fitslope # prints this info to log file

thermo          5000
run             200000
Neighbor list info ...
  update every 1 steps, delay 10 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 16
  ghost atom cutoff = 16
  binsize = 8, bins = 4 5 4
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/newton/tri
      stencil: half/bin/3d/newton/tri
      bin: standard
WARNING: Inconsistent image flags (src/domain.cpp:785)
Per MPI rank memory allocation (min/avg/max) = 31.83 | 31.83 | 31.83 Mbytes
Step v_eqtemp c_msd[4] v_fitslope 
       0          298 1.2638324e-29 3.3333333e+18 
    5000          298 0.00049398489 6.8438734e-09 
   10000          298 0.0003712716 2.0938496e-09 
   15000          298 6.7756858e-05 -8.9184938e-10 
   20000          298 0.00048357098 9.3249338e-11 
   25000          298 7.0240676e-05 5.1853392e-11 
   30000          298 0.00049421033 -7.97007e-11 
   35000          298 0.00023610504 4.5407429e-11 
   40000          298 0.00056486633 -1.2180919e-10 
   45000          298 0.00017239579 -7.0058329e-12 
   50000          298 0.00015564492 -3.3392933e-11 
   55000          298 0.00043998612 -6.892721e-11 
   60000          298 5.8432735e-05 2.4143269e-11 
   65000          298  0.000583376 -2.1475217e-11 
   70000          298 1.5701575e-05 8.0352347e-12 
   75000          298 0.00052478316 6.5184008e-11 
   80000          298 6.6438543e-05 4.0675979e-11 
   85000          298 0.00047594131 4.1217198e-11 
   90000          298 0.00044849043 6.3303224e-11 
   95000          298 0.0001998296 4.4316842e-11 
  100000          298 0.00032398898 5.3383505e-11 
  105000          298 0.00070159222 4.0491026e-11 
  110000          298 0.00042595378 2.3959984e-11 
  115000          298 0.00059383808 6.1796691e-11 
  120000          298 8.3966578e-06 6.2040688e-11 
  125000          298 0.00051637336 5.1291083e-11 
  130000          298 0.00019609222 9.6847926e-11 
  135000          298 0.00011064854 7.2140333e-11 
  140000          298 0.00039032198 8.9084919e-11 
  145000          298 0.00052081631 1.0133121e-10 
  150000          298 0.00064943646 1.2308697e-10 
  155000          298 0.00018554799 1.1102678e-10 
  160000          298 0.00043146093 1.0226373e-10 
  165000          298 0.00012198915 8.8230068e-11 
  170000          298 0.00024549474 6.8026945e-11 
  175000          298 0.00055962705 5.0104568e-11 
  180000          298 0.00045174895 4.468159e-11 
  185000          298 6.5569036e-05 2.7670077e-11 
  190000          298 0.00039336983 2.1809217e-11 
  195000          298 0.00039084807 1.7385003e-11 
  200000          298 0.00028104243 1.188125e-11 
Loop time of 164.858 on 1 procs for 200000 steps with 2431 atoms

Performance: 104.818 ns/day, 0.229 hours/ns, 1213.168 timesteps/s
100.0% CPU use with 1 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 3.5781     | 3.5781     | 3.5781     |   0.0 |  2.17
Bond    | 142        | 142        | 142        |   0.0 | 86.13
Neigh   | 1.5272     | 1.5272     | 1.5272     |   0.0 |  0.93
Comm    | 11.287     | 11.287     | 11.287     |   0.0 |  6.85
Output  | 0.11001    | 0.11001    | 0.11001    |   0.0 |  0.07
Modify  | 2.9245     | 2.9245     | 2.9245     |   0.0 |  1.77
Other   |            | 3.432      |            |       |  2.08

Nlocal:    2431 ave 2431 max 2431 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    16166 ave 16166 max 16166 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    1168 ave 1168 max 1168 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 1168
Ave neighs/atom = 0.480461
Ave special neighs/atom = 6.58988
Neighbor list builds = 23
Dangerous builds = 0
unfix           3
unfix           5
undump          NiPyC2_experiment_with_Kr_xyzmov

Total wall time: 0:02:44
